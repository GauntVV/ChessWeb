{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vikaa\\\\WebstormProjects\\\\Chess\\\\src\\\\components\\\\Timer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Colors } from \"../models/Colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timer = _ref => {\n  _s();\n  let {\n    currentPlayer,\n    restart\n  } = _ref;\n  const [blackTime, setBlackTime] = useState(300);\n  const [whiteTime, setWhiteTime] = useState(300);\n  const timer = useRef(null);\n  useEffect(() => {\n    startTimer();\n  }, [currentPlayer]);\n  function startTimer() {\n    if (timer.current) {\n      clearInterval(timer.current);\n    }\n    const callback = (currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.color) === Colors.WHITE ? decrementWhiteTimer : decrementBlackTimer;\n    timer.current = setInterval(callback, 1000);\n  }\n  function decrementBlackTimer() {\n    setBlackTime(prev => prev - 1);\n  }\n  function decrementWhiteTimer() {\n    setWhiteTime(prev => prev - 1);\n  }\n  const handleRestart = () => {\n    setWhiteTime(300);\n    setBlackTime(300);\n    restart();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRestart,\n        children: \"Restart game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u0427\\u0435\\u0440\\u043D\\u044B\\u0435 - \", blackTime]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u0411\\u0435\\u043B\\u044B\\u0435 - \", whiteTime]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Timer, \"iCLlVO7I5GgDlON2NnW14YDL6s0=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Colors","jsxDEV","_jsxDEV","Timer","_ref","_s","currentPlayer","restart","blackTime","setBlackTime","whiteTime","setWhiteTime","timer","startTimer","current","clearInterval","callback","color","WHITE","decrementWhiteTimer","decrementBlackTimer","setInterval","prev","handleRestart","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vikaa/WebstormProjects/Chess/src/components/Timer.tsx"],"sourcesContent":["import React, {FC, useEffect, useRef, useState} from 'react';\r\nimport {Player} from \"../models/Player\";\r\nimport {Colors} from \"../models/Colors\";\r\n\r\ninterface TimerProps {\r\n    currentPlayer: Player | null;\r\n    restart: () => void;\r\n}\r\n\r\nconst Timer: FC<TimerProps> = ({currentPlayer, restart}) => {\r\n    const [blackTime, setBlackTime] = useState(300)\r\n    const [whiteTime, setWhiteTime] = useState(300);\r\n    const timer = useRef<null | ReturnType<typeof setInterval>>(null)\r\n\r\n    useEffect(() => {\r\n        startTimer()\r\n    }, [currentPlayer])\r\n\r\n    function startTimer() {\r\n        if (timer.current) {\r\n            clearInterval(timer.current)\r\n        }\r\n        const callback = currentPlayer?.color === Colors.WHITE ? decrementWhiteTimer : decrementBlackTimer\r\n        timer.current = setInterval(callback, 1000)\r\n    }\r\n\r\n    function decrementBlackTimer() {\r\n        setBlackTime(prev => prev - 1)\r\n    }\r\n    function decrementWhiteTimer() {\r\n        setWhiteTime(prev => prev - 1)\r\n    }\r\n\r\n    const handleRestart = () => {\r\n        setWhiteTime(300)\r\n        setBlackTime(300)\r\n        restart()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <button onClick={handleRestart}>Restart game</button>\r\n            </div>\r\n            <h2>Черные - {blackTime}</h2>\r\n            <h2>Белые - {whiteTime}</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Timer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAOC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AAE5D,SAAQC,MAAM,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOxC,MAAMC,KAAqB,GAAGC,IAAA,IAA8B;EAAAC,EAAA;EAAA,IAA7B;IAACC,aAAa;IAAEC;EAAO,CAAC,GAAAH,IAAA;EACnD,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,GAAG,CAAC;EAC/C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,GAAG,CAAC;EAC/C,MAAMa,KAAK,GAAGd,MAAM,CAAwC,IAAI,CAAC;EAEjED,SAAS,CAAC,MAAM;IACZgB,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACP,aAAa,CAAC,CAAC;EAEnB,SAASO,UAAUA,CAAA,EAAG;IAClB,IAAID,KAAK,CAACE,OAAO,EAAE;MACfC,aAAa,CAACH,KAAK,CAACE,OAAO,CAAC;IAChC;IACA,MAAME,QAAQ,GAAG,CAAAV,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEW,KAAK,MAAKjB,MAAM,CAACkB,KAAK,GAAGC,mBAAmB,GAAGC,mBAAmB;IAClGR,KAAK,CAACE,OAAO,GAAGO,WAAW,CAACL,QAAQ,EAAE,IAAI,CAAC;EAC/C;EAEA,SAASI,mBAAmBA,CAAA,EAAG;IAC3BX,YAAY,CAACa,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;EAClC;EACA,SAASH,mBAAmBA,CAAA,EAAG;IAC3BR,YAAY,CAACW,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;EAClC;EAEA,MAAMC,aAAa,GAAGA,CAAA,KAAM;IACxBZ,YAAY,CAAC,GAAG,CAAC;IACjBF,YAAY,CAAC,GAAG,CAAC;IACjBF,OAAO,CAAC,CAAC;EACb,CAAC;EAED,oBACIL,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MAAAsB,QAAA,eACItB,OAAA;QAAQuB,OAAO,EAAEF,aAAc;QAAAC,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,eACN3B,OAAA;MAAAsB,QAAA,GAAI,yCAAS,EAAChB,SAAS;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC7B3B,OAAA;MAAAsB,QAAA,GAAI,mCAAQ,EAACd,SAAS;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEd,CAAC;AAACxB,EAAA,CAvCIF,KAAqB;AAAA2B,EAAA,GAArB3B,KAAqB;AAyC3B,eAAeA,KAAK;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}